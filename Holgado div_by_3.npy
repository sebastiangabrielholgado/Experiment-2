{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "99284673-0e37-4da2-b3a5-951b6968be2b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[   9   36   81  144  225  324  441  576  729  900 1089 1296 1521 1764\n",
      " 2025 2304 2601 2916 3249 3600 3969 4356 4761 5184 5625 6084 6561 7056\n",
      " 7569 8100 8649 9216 9801]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np #Import library\n",
    "numbers = np.arange(1,101) #Create matrix for square of first 100 integers\n",
    "square = numbers**2 #Square the values\n",
    "A = square.reshape(10,10) #change the dimension of the array to 10x10\n",
    "\n",
    "divby3 = square[square % 3 == 0] #Divisible by 3 condition\n",
    "print(divby3) #print divisible by 3 table\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1e21a252-8654-401c-8e60-cbd8e47abaf0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
